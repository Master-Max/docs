*******************
Интеграция с Zapier
*******************

В версии CS-Cart и Multi-Vendor 4.15.1 мы добавили модуль, который позволяет связать ваш магазин с `платформой Zapier <https://platform.zapier.com/quickstart/introduction>`_. Zapier позволяет интегрировать в рабочие процессы приложения и сервисы. Это значит, что вы можете встроить в работу отсутствующее в CS-Cart приложение, если есть интеграция с Zapier. Привязка процессов в магазине к работе других приложений автоматизирует текущие задачи и экономит ваше время.

Вы задаёте правила, по которым происходит управление и обмен данными между магазином и приложениями. Эти правила называются **Запами**. 

Зап состоит из одного **триггера** (какое-то событие в CS-Cart или другом приложении) и любого количества **действий**, вызываемых триггером. Триггером может быть создание заказа, а действием при этом — отправка электронного письма о новом заказе и заполнение Google Таблицы с данными о заказах.

.. note::

    Zapier предоставляет несколько `тарифных планов <https://zapier.com/app/billing/plans>`_, среди которых есть бесплатный. Цена влияет на количество создаваемых Запов, многошаговость — количество событий, которых приводит в действие один триггер и т.д.

.. contents::
   :backlinks: none
   :local:

==========================================
Как настроить интеграцию магазина с Zapier
==========================================

#. В панели администратора магазина перейдите на страницу **Модули → Управление модулями** и убедитесь, что модуль **Интеграция с Zapier** установлен и включен.

#. Перейдите на страницу **Покупатели → Администраторы**. В списке пользователей найдите главного администратора и откройте страницу с профилем, нажав на его имя. На вкладке *API-доступ* дайте администратору магазина доступ к API. 

   .. note::

       Только главный администратор имеет доступ к API. Учётная запись главного администратора автоматически создаётся во время установки CS-Cart или Multi-Vendor. 
       
       В расширенных версиях не обязательно управлять API через главного администратора. Например, можно :doc:`создать группу пользователей и назначить ей нужные права </user_guide/users/administrators/admin_group>`. Затем в созданную группу добавить аккаунт администратора для взаимодействия с API и позволить распоряжаться API-ключом ему.

#. Скопируйте имеющийся API-ключ. Если у вас нет ключа, тогда на вкладке *API-доступ* сгенерируйте новый ключ и скопируйте его.

#. `Откройте панель управления Zapier <https://zapier.com/app/dashboard>`_.

#. В боковом меню слева нажмите на `My Apps <https://zapier.com/app/connections>`_ и среди пользовательских интеграций выберите **CS-Cart**: **Custom integrations → CS-Cart**. 

#. Добавьте соединение, нажав **Add connection**. В появившемся окне заполните поля:

   - **Username** — почтовый адрес администратора магазина, который владеет API-ключом. 

   - **Password**  — API-ключ для доступа к магазину. Вставьте скопированные данные.

   - **Base URL** — полный URL-адрес магазина без косой черты в конце.

#. После ввода данных, разрешите Zapier доступ к вашему магазину, нажав **Yes, continue**.

.. _zapier-connection-cs-cart:

8. Готово! Теперь во вкладке Connections есть запись вашего соединения, например *CS-Cart (1.0.0) #1*.

9. Проверьте, есть ли соединение. Откройте меню  рядом с названием соединения и выберите **Test connection**.

   .. fancybox:: img/add_connection.png
       :alt: Поля для заполнения для интеграции с Zapier.

   .. fancybox:: img/list_of_connections.png
       :alt: Интеграция с CS-Cart в списке соединений.

==============================================================
Как интегрировать CS-Cart с выбранным сервисом (создание Запа)
==============================================================

Для автоматизация процесса, связанного с магазином, необходимо выполнить следующие шаги.

#. Включите модуль **Интеграция с Zapier** в панели администратора и свяжите магазин с Zapier.

#. В дашборде Zapier настройте **триггер** — событие, которое запустит ваш Зап. 

#. Для этого сначала выберите приложение, в котором событие будет происходить, а затем выберите само событие. 

   .. note:: 

       Выберите CS-Cart в качестве приложения, если хотите, чтобы триггером было событие в магазине, например появление нового продавца. Или выберите другое приложение, например Google Таблицы, чтобы запускать действия при появлении новых строк в таблице. 

#. Настройте **действие** — событие, которое Зап выполняет после запуска. 

   Этот шаг также включает выбор приложения и настройку того, что произойдет в этом приложении. 

   ..note ::

      Если вы выбираете CS-Cart в качестве приложения, то триггер будет запускать изменения в магазине, например создание нового заказа. 

#. Зап готов. 

   Теперь можно применить к нему фильтры, чтобы добавить дополнительные условия для срабатывания **действия**. Если хотите посмотреть работу созданного Запа, перенесите имеющиеся данные из одного приложения в другое.

====================
Пример создания Запа 
====================

Рассмотрим более детально, как можно автоматизировать рабочие процессы на примере.

*Представьте, что вам нужна статистика по заказам за несколько месяцев. Графики позволят узнать, кто сделал больше всех заказов, кто купил товаров на самую большую сумму, в какие дни было больше всего продаж и т.д. Google Таблицы — удобный инструмент для составления графиков и диаграмм. Чтобы в таблице регулярно появлялась информация о новых заказах в магазине, данные нужно переносить из магазина в таблицу.*

Сэкономить время на рутинных процессах поможет интеграция с Zapier и создание Запов. Создадим Зап, который будет регулярно добавлять в Google таблицу информацию о новых заказах.

#. `Зарегистрируйтесь <https://zapier.com/sign-up/>`_ или `войдите <https://zapier.com/app/login>`_ в аккаунт Zapier и создайте Зап, нажав кнопку **Create Zap**.

#. Создайте триггер, **Trigger Event**.
    #. Выберите приложение и событие. Затем нажмите **Continue**.

       Приложение, **App event** — *CS-Cart*;

       Событие, **Trigger event** — новый заказ, *New Order*.

    #. Выберите Google аккаунт, **Choose account** — :ref:`соединение, которое создалось при настройке интеграции магазина с Zapier <zapier-connection-cs-cart>`. Нажмите **Continue**.

    #. Протестируйте действие, **Test action**. Если всё настроено правильно, тогда вы увидите детальную информацию о последнем заказе из магазина.

#.Создайте действие, **Action Event**.
    #. Выберите приложение и событие. Затем нажмите **Continue**.

       Приложение, **App event** — *Google Sheets*;

       Событие, **Action event** — новая строка в конце документа, *Create Spreadsheet Row*.
  
    #. Выберите Google аккаунт, **Choose account** — аккаунт, с которым связана  Google Таблица.
    
    #. Настройте действие, **Set up action**. :ref:`Настройте поля с данными о пользователях в соответствии с Google Таблицей <zapier-spreadsheet_requirements>`. Нажмите **Continue**.

    #.  Протестируйте действие, **Test action**. Если все было настроено правильно, то в Google Таблице появится новая строка с подробной информацией о последнем заказе в магазине.
    
#. Включите Зап, нажав **Turn on Zap**.
   
   Ваш Зап готов! Теперь данные о новых заказах в вашем магазине будут автоматически передаваться в Google Таблицу. Вы также можете создать Запы для других триггеров и действий.

   .. fancybox:: img/finished_zap.png
       :alt: Готовый Зап с настроенными триггерами и действиями.

.. _zapier-spreadsheet_requirements:

Требования к документу 
----------------------

Подключите существующую Google Таблицу или создайте новую. Для настройки интеграции, ваша Google Таблица должна содержать:

* Названия колонок;

  Первая строка в Google Таблице c названиями колонок. В данном примере ваш документ может содержать, например такие столбцы: ID Заказа, Имя и Фамилия пользователя, Общая Сумма Заказа и т.д.

* Если **триггерные события** происходят в Google Таблице, то в этой таблице должна быть минимум одна строка с заполненными данными о заказе/пользователе/отгрузке из вашего магазина. Это нужно, чтобы тестировать правильность настройки Запа.

  *Пример Google Таблицы*

  .. fancybox:: img/example_speadsheet.png
      :alt: Скриншот с деталями заказа в в Google Таблице.

======================================================================================
Какие события в CS-Cart можно использовать для связи с другими приложениями и сервисами
=======================================================================================
При создании Запа вы настраиваете триггеры и действия. Можно настроить, чтобы события в вашем магазине были причиной (триггером) для запуска других событий. Также можно сделать магазин местом, где происходят события после срабатывания триггера. Не все действия в магазине могут быть встроены в эту цепочку.

При выборе CS-Cart в качестве приложения следующие события могут быть триггерами и действиями:

.. list-table:: 
   :widths: 4 4 3 5
   :header-rows: 1

   * - 
     - Триггер
     - 
     - Действие
   * - Если в CS-Cart появляется 
     - * новый заказ;
       * новый товар;
       * новая отгрузка;
     - .. figure:: img/arrow.png
              :align: left
              :scale: 60%
              :alt: Arrow right.
     - Выберите, что будет происходить после срабатывания события в магазине. Это могут быть события в CS-Cart или другом приложении.

.. list-table:: 
   :widths: 6 3 3 6
   :header-rows: 1

   * - 
     - Триггер
     - 
     - Действие
   * - Если в CS-Cart или другом приложении сработал триггер, то 
     - .. figure:: img/arrow.png
              :align: left
              :scale: 60%
              :alt: Arrow right.
     - в магазине происходит
     - * создание заказа;
       * создание товара.

.. image:: img/trigger_events.png
    :alt: События, которые можно сделать триггерами, когда CS-Cart выбран в качестве приложения.

.. meta::
   :description: Как настроить интеграцию с Zapier? Зачем нужна интеграция с Zapier? Как интегрировать CS-Cart с выбранным сервисом?
